[
{
    "moduleCode": "CS4223R",
    "title": "Multi-core Architectures",
    "description": "The world of parallel computer architecture has gone through a significant transformation in the recent years from high-end supercomputers used only for scientific applications to the multi-cores (multiple processing cores on a single chip) that are ubiquitous in mainstream computing systems including desktops, servers, and embedded systems. In the context of this exciting development, the aim of this module is to examine the design issues that are critical to modern parallel architectures. Topics include instruction-level parallelism through static and dynamic scheduling, shared memory, message-passing, and data parallel computer architectures, cache coherence protocols, hardware synchronization primitives, and memory consistency models.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CG2271/CS2106 at a grade of at least D\n\tand\n\tmust have completed 1 of CG3207/CS3210/CS3220 at a grade of at least D\n)",
    "semesterData": []
  },
  {
    "moduleCode": "CS4224",
    "title": "Distributed Databases",
    "description": "This module studies the management of data in a distributed environment. It covers the fundamental principles of distributed data management and includes distribution design, data integration, distributed query processing and optimization, distributed transaction management, and replication. It will also look at how these techniques can be adapted to support database management in emerging technologies (e.g., parallel systems, peer-to-peer systems, cloud computing).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3223 at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed CS5424 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-22T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4225",
    "title": "Big Data Systems for Data Science",
    "description": "Data science incorporates varying elements and builds on techniques and theories from many fields, including statistics, data engineering, data mining, visualization, data warehousing, and high-performance computing systems with the goal of extracting meaning from big data and creating data products. Data science utilizes advanced computing systems such as Apache Hadoop and Spark to address big data challenges. In this module, students will learn various computing systems and optimization techniques that are used in data science with emphasis on the system building and algorithmic optimizations of these techniques.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS2102/IT2002 at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed 1 of BT4221/CS5425 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4226",
    "title": "Internet Architecture",
    "description": "This module aims to focus on advanced networking concepts pertaining to the modern Internet architecture and applications. It covers a range of topics including network performance (throughput, delay, Little’s Law and M/M/1 queuing formula), and resource allocation and buffer management (max-min fair, round-robin and RED), intra- and inter-domain routing (RIP, OSPF and BGP), congestion control and modern variations of TCP (AIMD and Cubic TCP), peer-to-peer applications and content delivery networks (BitTorrent, Skype, Akamai), and data center networking and management (SDN and OpenFlow).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of CS2105/EE3204/EE3204E/EE4204 at a grade of at least D AND must have completed 1 of EE2012/EE2012A/MA2116/MA2216/ST2131/ST2334 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-24T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4230",
    "title": "Foundations of Modern Cryptography",
    "description": "This module introduces students to the theoretical underpinnings of cryptography Modern cryptographic primitives can generate strings that look random, send messages that only intended recipients can read, authenticate individuals, run computations on sensitive data without compromising privacy, and perform several other seemingly paradoxical tasks We will study a number of these primitives with emphasis on how to: (i) define their security requirements rigorously, (ii) construct them, and (iii) prove that these constructions are secure We will focus on the theoretical foundations that they are built upon, using tools from algebra, number theory, combinatorics, and probability. This will involve rigorous mathematical",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 5, 2],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of CS1231/CS1231S/MA1100/MA1100T at a grade of at least D AND must have completed CS3230 at a grade of at least D AND must have completed 1 of MA2116/MA2216/ST2131/ST2334 at a grade of at least D)",
    "preclusion": "If undertaking an Undergraduate Degree THEN must not have completed CS5430",
    "attributes": {
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4231",
    "title": "Parallel and Distributed Algorithms",
    "description": "This course will examine some fundamental issues in parallel programming and distributed computing, and the relationships between the two.  Parallel programming: mutual exclusion, semaphores, consistency, wait-free synchronization.  Distributed computing: time, global state, snapshots, message ordering.  Relationships: consensus, fault-tolerance, transactions, self-stabilization.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS3210/CS3230 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-05-03T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4232R",
    "title": "Theory of Computation",
    "description": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed \"CS4232\" at a grade of at least D\n)",
    "semesterData": []
  },
  {
    "moduleCode": "CS4234",
    "title": "Optimisation Algorithms",
    "description": "This module covers common algorithmic techniques for solving optimisation problems, and introduces students to approaches for finding good-enough solutions to NP-hard problems. Topics covered include linear and integer programming, network flow algorithms, local search heuristics, approximation algorithms, and randomized algorithms. Through analysis and application of the techniques to a variety of canonical problems, students develop confidence to (i) appropriately model a given optimisation problem, (ii) apply appropriate algorithmic techniques to solve the problem, (iii) analyse the properties of the problem and candidate algorithms, such as time and space complexity, convergence, approximability, and optimality bound.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of MA1101R/MA1311/MA1508E/MA1513/MA1522/MA2001/YSC2232 at a grade of at least D AND must have completed 1 of CS3230/YSC3203 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-29T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4234R",
    "title": "Optimisation Algorithms",
    "description": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "semesterData": []
  },
  {
    "moduleCode": "CS4235",
    "title": "Computational Geometry",
    "description": "Computational geometry is the study of algorithms for solving geometric problems. This course introduces the main topics and techniques in this field. They will be presented in connection with applications in CAD, databases, geographic information systems, graphics and robotics. Students will learn the main algorithmic techniques for solving geometric problems and the related discrete geometric structures. At the end of this module, students will be able to design and analyse geometric algorithms and data structures, and to apply these techniques to solve problems arising in applications.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 2, 0, 4, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101\"/\"MA1101R\"/\"MA1506\"/MA2001 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4236",
    "title": "Cryptography Theory and Practice",
    "description": "This module aims to introduce the foundation, principles and concepts behind cryptology and the design of secure communication systems. The emphasis is on the formulation and techniques of various cryptographic primitives, and on the secure usage of such primitives to achieve the goals of confidentially, integrity, and authenticity in both theoretical settings and practical scenarios. Basic topics include pseudorandom functions, symmetric key encryption, public key encryption, message\nauthentication codes, hash functions, digital signatures, key exchange and PKI. Selected topics may include: secret sharing, TCP/IP security, Kerberos, SSL, trusted computing, side-channel attacks.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2010\"/\"CS2020\"/CS2040/CS2040C/CS2040S/YSC2229 at a grade of at least D\n\tand\n\tmust have completed CS2107 at a grade of at least D\n\tand\n\tmust have completed 1 of CS1231/CS1231S/MA1100/MA1100T at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-22T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4238",
    "title": "Computer Security Practice",
    "description": "This is a practice security module with emphasis on hands-on experiences of computer security. The objective of this module is to connect computer security knowledge to practical skills, including common attacks and protection mechanisms, system administration, and development of secured software. Topics covered include network security, operating system security, and application security, such as DNS attacks, memory-error exploits, and web application attacks. Students will learn through lab-based exercises and assignments.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 1, 0, 4],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  CS3235 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4239",
    "title": "Software Security",
    "description": "Software engineering processes need to include security considerations in the modern world. This module familiarizes students to security issues in different stages of the software life-cycle. At the end of the module, the students are expected to understand secure programming practices, be able to analyse and check for impact of malicious inputs in programs, and employ specific testing techniques which can help detect software vulnerabilities.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 2, 5],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3235 at a grade of at least D\n\tand\n\tmust have completed 1 of CS2103/CS2103T/CS2113/CS2113T at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed CS5439 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-22T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-02T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4240",
    "title": "Interaction Design for Virtual and Augmented Reality",
    "description": "This module aims to expose students to the human-centered principles of designing and building virtual reality (VR) and augmented reality (AR) applications. Students will learn about the fundamentals of VR and AR, human perceptions of reality, and the design patterns and guidelines for user interactions within VR/AR applications. Students will gain hands on experience building VR/AR applications applying these interaction principles.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 2, 4, 2],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed CS3240 at a grade of at least D AND ( must have completed 1 of MA1301/MA1301X at a grade of at least D OR ( must have completed 06 MATHEMATICS at a grade of at least E AND must be H2)))",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS4240R",
    "title": "Interaction Design for Virtual and Augmented Reality",
    "description": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "semesterData": []
  },
  {
    "moduleCode": "CS4241",
    "title": "Multimedia Information Retrieval",
    "description": "With the proliferation digital media, more and more information is available in non-textual forms. The ability to index, manage and retrieve media contents is of paramount importance. This module introduces the theory, design and technologies of media search. It covers the design of media search engine, the extraction of media features and their indexing, media concept annotation, media search paradigms, and interactive search. It also covers the applications of media search in social media, enterprise and personal media.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3245 at a grade of at least D\n\tand\n\tmust have completed \"CS3246\" at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4242",
    "title": "Social Media Computing",
    "description": "The emergence of WWW, smart mobile devices and social networks has revolutionised the way we communicate, create, disseminate, and consume information. This has ushered in a new era of communications that involves complex information exchanges and user relationships. This module aims to provide students with a good understanding of the social network phenomena and computational skills for analysing the complex social relation networks between users, the contents they shared, and the ways contents and events are perceived and propagated through the social networks. The analysis will provide better understanding of the concerns and interests of users, and uncover live and emerging events that will affect the community.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS2108 at a grade of at least D\n\tand\n\tmust have completed CS3245 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4243",
    "title": "Computer Vision and Pattern Recognition",
    "description": "This module is for undergraduates who are interested in computer vision and its applications. It covers (a) the basic skills needed in handling images and videos, (b) the basic theories needed to understand geometrical computer vision, and (c) pattern recognition. Topics covered in image handling include: contrast stretch, histogram equalization, noise removal, and color space. Topics covered in geometrical vision include: affine transform, vanishing points, camera projection models, homography, camera calibration, rotation representations including quaternions, epipolar geometry, binocular stereo, structure from motion. Topics covered for pattern recognition include principal component analysis.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  MA1101R/MA1311/MA1508E/MA1513/MA1522/MA2001/YSC2232 at a grade of at least D  AND  must have completed  1 of  EE2012/EE2012A/MA2116/MA2216/ST1131/ST1131A/ST1232/ST2131/ST2334/YSC2243 at a grade of at least D  AND ( must have completed  1 of  CS1020/CS1020E/CS2020 at a grade of at least D  OR ( must have completed  1 of  CS2030/CS2030S/CS2113/CS2113T at a grade of at least D  AND  must have completed  1 of  CS2040/CS2040C/CS2040S/YSC2229 at a grade of at least D))  AND (( must have completed  1 of  MA1102R/MA1505/MA1507/MA1521/MA2002/YSC1216 at a grade of at least D)  OR ( must have completed  all of  MA1511/MA1512 at a grade of at least D)))",
    "preclusion": "If undertaking an Undergraduate Degree  THEN ( must not have completed  1 of  EE4212/EE4704 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-30T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-04T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4243R",
    "title": "Computer Vision and Pattern Recognition",
    "description": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CG1102\"/\"CG1103\"/\"CS1020\"/\"CS1020E\"/\"CS1102\"/\"CS1102C\"/\"CS1102S\"/\"CS2020\" at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101R\"/\"MA1506\" at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1102\"/\"MA1102R\"/\"MA1505C\"/MA1505/MA1521 at a grade of at least D\n\tand\n\tmust have completed 1 of ST1232/ST2131/ST2334 at a grade of at least D\n)",
    "semesterData": []
  },
  {
    "moduleCode": "CS4244",
    "title": "Knowledge Representation and Reasoning",
    "description": "This course will focus on core issues of representation and reasoning of the knowledge in the context of design of intelligent machines. We will focus on how logic can be used to formalise and perform deduction from existing knowledge. We will then discuss compilation techniques. Finally, we will discuss limitations of monotonic logic and discuss challenges for non-monotonic reasoning.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  CS3243/CS3263 at a grade of at least D)",
    "attributes": {
      "lab": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4246",
    "title": "AI Planning and Decision Making",
    "description": "This module introduces the major concepts and paradigms in planning and decision making in complex environments. It examines issues, challenges, and techniques in problem representation, goal or objective specification, response selection, and action consequence for a wide range of strategic and tactical planning and decision making situations. Topics covered include deterministic and non-deterministic planning, practical planning and acting under resource constraints and uncertainy, expected utility and rational decision making, decision networks, Markov decision processes, elementary game theory, and multi-agent planning and decision making.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN (( must have completed  1 of  EE2012/EE2012A/ST2132/ST2334 at a grade of at least D  OR ( must have completed  1 of  MA2116/MA2216/ST2131 at a grade of at least D  AND  must have completed  1 of  DCS2008/ST1131/ST1131A/ST1232 at a grade of at least D))  AND  must have completed  1 of  CS3243/CS3263 at a grade of at least D)",
    "preclusion": "If undertaking an Undergraduate Degree  THEN ( must not have completed  CS5446 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B", "Unknown"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-02T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["Unknown", "B"]
      }
    ]
  },
  {
    "moduleCode": "CS4246R",
    "title": "AI Planning and Decision Making",
    "description": "This 1-MC course adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "prerequisite": "If undertaking an Undergraduate Degree THEN (( must have completed 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D OR ( must have completed 1 of MA2116/MA2216/ST2131 at a grade of at least D AND must have completed 1 of DCS2008/ST1131/ST1131A/ST1232 at a grade of at least D)) AND must have completed 1 of CS3243/CS3263 at a grade of at least D)",
    "corequisite": "If undertaking an Undergraduate Degree THEN must be enrolled in CS5446 at a grade of at least D",
    "semesterData": []
  },
  {
    "moduleCode": "CS4247",
    "title": "Graphics Rendering Techniques",
    "description": "This module provides a general treatment of real-time and offline rendering techniques in 3D computer graphics. Specific topics include the raster graphics pipeline, viewing and transformation, real-time mapping techniques, real-time shadow algorithms, local reflection models, global illumination, distributed ray tracing, photon mapping, radiosity, volume rendering, image-based rendering and modelling, and strategies for anti-aliasing and photo-realism.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3241 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-05-02T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4248",
    "title": "Natural Language Processing",
    "description": "This module deals with computer processing of human languages, including the use of neural networks and deep learning in natural language processing. The topics covered include: regular expressions, words and edit distance, n-grams, part-of-speech tagging, feed-forward neural networks, neural network training, word embedding, convolutional neural networks, recurrent neural networks, sequence-to-sequence models with attention, transformers, context-free grammars, syntactic parsing, semantics, and discourse.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0.5, 0, 3, 3.5],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN (( must have completed  1 of  CS2109S/CS3243 at a grade of at least D  AND  must have completed  1 of  EE2012/EE2012A/MA2116/MA2216/ST2131/ST2334/YSC2243 at a grade of at least D)  AND ( must have completed  1 of  MA1102R/MA1505/MA1507/MA1521/MA2002/YSC1216 at a grade of at least D  OR  must have completed  all of  MA1511/MA1512 at a grade of at least D))",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-29T01:00:00.000Z",
        "examDuration": 90,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-02T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4248R",
    "title": "Natural Language Processing",
    "description": "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "moduleCredit": "1",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 2, 1],
    "semesterData": []
  },
  {
    "moduleCode": "CS4249",
    "title": "Phenomena and Theories of Human-Computer Interaction",
    "description": "This module teaches the underlying science of Human-Computer Interaction (HCI) and its application to user interface design. It surveys a wide range of  psychological theories beginning with organizational behaviour approaches, understanding of work and workflow within organizations, and moving on to understanding human psychological architecture and processing constraints. It demonstrates via a combination of scientific theory understanding and engineering modelling the solutions of design problems facing a user interface designer. It also covers new design methods and techniques available and the new conceptual mechanisms used in HCI such as the metaphors for describing user interaction.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"NM2213\"/\"NM2216\"/CS3240 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS4257",
    "title": "Algorithmic Foundations of Privacy",
    "description": "This module covers algorithmic foundations of computation and communication privacy. It provides a thorough methodology for analysis of privacy against inference attacks using techniques from statistics, probability theory, and machine learning. Students will learn how to reason quantitatively about privacy, and evaluate it using the appropriate metrics. The module will help students to design privacy-preserving mechanisms for a range of systems from anonymous communication to data analytics. After this module, students should be able to identify privacy vulnerabilities in a system, design inference attacks, and propose effective countermeasures in a systematic manner.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 5, 3],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  EE2012/EE2012A/ST2132/ST2334 at a grade of at least D  OR ( must have completed  1 of  MA2116/MA2216/ST2131 at a grade of at least D  AND  must have completed  1 of  DSC2008/ST1131/ST1131A/ST1232 at a grade of at least D)  AND  must have completed  all of  CS2107/CS3230 at a grade of at least D)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4261",
    "title": "Algorithmic Mechanism Design",
    "description": "Recent years have seen a dramatic rise in the use of algorithms for solving problems involving strategic decision makers. Deployed algorithms now assist in a variety of economic interactions assigning medical residents to schools, allocating students to courses, allocating security resources in airports, allocating computational resources and dividing rent. We will explore foundational topics at the intersection of economics and computation, starting with the foundations of game theory Nash equilibria, the theory of cooperative games, before proceeding to covering more advanced topics matching algorithms, allocation of indivisible goods, and mechanism design.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  EE2012/EE2012A/MA2116/MA2216/ST2131/ST2334 at a grade of at least D  AND  must have completed  1 of  CS2010/CS2020/CS2040/CS2040C/CS2040S at a grade of at least D  AND  must have completed  1 of  CS1231/CS1231S/MA1100/MA1100T at a grade of at least D  AND  must have completed  1 of  MA1101R/MA1311/MA1508E/MA1513/MA2001 at a grade of at least D)",
    "preclusion": "If undertaking an Undergraduate Degree  THEN ( must not have completed  CS5461 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-28T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4268",
    "title": "Quantum Computing",
    "description": "This module will introduce basics of quantum computing and cover various well known algorithms e.g. Deutsch-Jozsa algorithm, Simon’s algorithms, quantum Fourier transform, phase estimation, order finding, Shor’s algorithm and Grover’s algorithm. The module will also cover some basics in quantum information theory, cryptography and error correction.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed CS3230 at a grade of at least D AND must have completed 1 of EE2012/EE2012A/MA2116/MA2216/ST2131/ST2334 at a grade of at least D AND must have completed 1 of MA1101R/MA1311/MA1508E/MA1513/MA1522/MA2001 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-29T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4269",
    "title": "Fundamentals of Logic in Computer Science",
    "description": "Logic is often called the \"calculus of computer science\" due to the central role played by logic in computer science akin to the role played by calculus in physics and engineering. This module will formally introduce and prove some of the fundamental results in logic to provide students with a rigorous introduction of syntax, semantics, decision procedures, and complexity of propositional and\nfirst-order logic. The course will be taught from a computer science perspective with particular emphasis on algorithmic and computational complexity components.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2010\"/\"CS2020\"/CS2040/CS2040C/CS2040S/YSC2229 at a grade of at least D\n\tand\n\tmust have completed 1 of CS1231/CS1231S/MA1100/MA1100T at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed CS5469 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4276",
    "title": "IoT Security",
    "description": "With the advent of the Internet-of-Things, the computing paradigm is quickly changing from the traditional cyber domain to cyber-physical domain. This is made possible from devices that are equipped with sensors and actuators that interact with the physical world. In this module, we will investigate how such sensing systems affect the notion of computer security. We will also explore the state-of-the-art research in the areas of sensing systems and how they can provide benefits to the security of the Internet-of-Things. This module will also investigate how an attacker may compromise the sensing information to exploit security vulnerabilities in these systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CG3002/CG4002/CS3237 at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed CS5476 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4277",
    "title": "3D Computer Vision",
    "description": "One of the most important capability for robots such as self-driving cars, domestic mobile robots, and drones to achieve full autonomy is the ability to perceive the 3D environment. A camera is an excellent choice as the main sensory device for robotic perception because it produces information-rich images, and is lightweight, low cost and requires little or no maintenance. This module covers mathematical concepts and algorithms that allow us to recover the 3D geometry of camera motions and the structures in its environment. Topics include projective geometry, camera model, one-/two-/three-/N-View reconstructions and stereo, generalized cameras and non- rigid structure-from-motion.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of MA1101R/MA1311/MA1506/MA1508E/MA1522/MA2001 at a grade of at least D AND must have completed 1 of CS2010/CS2020/CS2040/CS2040C/CS2040S at a grade of at least D)",
    "preclusion": "If undertaking an Undergraduate Degree THEN ( must not have completed CS5477 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-05-03T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4278",
    "title": "Intelligent Robots: Algorithms and Systems",
    "description": "This module introduces the core algorithms and system architectures of intelligent robots. It examines the main system components for sensing, decision making, and motion control and importantly, their integration for core robot capabilities, such as navigation and manipulation. It covers the key algorithms for robot intelligence through inference, planning, and learning, and also provides some practical experiences with modern robot systems. A variety of Illustrative examples are given, e.g., self-driving cars, aerial drones, and object manipulation.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 5, 2],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  CS3243/CS3263 at a grade of at least D  AND  must have completed  1 of  MA1101R/MA1311/MA1508E/MA1513/MA1522/MA2001 at a grade of at least D  AND  must have completed  1 of  EE2012/EE2012A/MA2116/MA2216/ST2131 at a grade of at least D  AND  must have completed  1 of  MA1102R/MA1505/MA1507/MA1521/MA2002 at a grade of at least D  OR ( must have completed  all of  MA1511/MA1512 at a grade of at least D))",
    "preclusion": "If undertaking an Undergraduate Degree  THEN ( must not have completed  CS5478 at a grade of at least D)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS4330",
    "title": "Combinatorial Methods in Bioinformatics",
    "description": "After the complete sequencing of a number of genomes, we are in the stage to understand the mystery of our body, that is, we need to understand the information encoded in the genome and its relationship with RNA and protein.\nThis aim of this module is to cover algorithms related to this stage. In the module, we will cover the algorithms related to genome annotation, motif identification, proteomics, population genetics, microarray, etc.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2010\"/\"CS2020\"/CS2040/CS2040C/CS2040S at a grade of at least D\n\tand\n\tmust have completed 1 of \"LSM2104\"/CS2220 at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed CS3225 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4344",
    "title": "Networked and Mobile Gaming",
    "description": "This module aims at providing students a deep understanding of various technical issues pertaining to the development of networked games and mobile games. Students will be exposed to concepts from distributed systems, operating systems, security and cryptography, networking and embedded systems.  In particular, issues such as game server architectures (mirrored, centralized, peer-to-peer etc.), consistency management (bucket synchronization, dead reckoning etc.), interest management, scalability to large number of clients (C10K problem), cheat prevention and detection, power management, will be discussed.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 2, 0, 5],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CG2271/CS2106 at a grade of at least D\n\tand\n\tmust have completed 1 of \"CG3204L\"/CS3103 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4345",
    "title": "General-Purpose Computation on GPU",
    "description": "With the advancements in the technology of graphics processing units (GPUs), many computations can be performed faster on the GPUs than the CPUs. They are also programmable, making them useful for not just computer graphics processing but also general-purpose computations. Therefore, they are a natural choice as high-speed coprocessors to the CPUs in various applications. This module introduces the architecture of GPU, program writing on GPU using high-level language such as Cg, and the use of GPU in applications including computer graphics, games, scientific computation, and image processing.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3241 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4347",
    "title": "Sound and Music Computing",
    "description": "This module introduces the fundamental technologies employed in Sound and Music Computing focusing on three major categories: speech, music, and environmental sound. This module introduces the concept of sound and its representations in the analog and digital domains, as well as in time and frequency domains. Moreover, this module provides hands-on instruction on relevant machine learning tools, and an in-depth review of related technologies in sound data analytics (Automatic Speech Recognition, Automatic Music Transcription and Sound Event Detection) leading to a group project. Topics in sound synthesis, automatic music generation and music information retrieval will be covered for breadth.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed CS2108 at a grade of at least D AND must have completed 1 of MA1101R/MA1311/MA1508E/MA1513/MA1522/MA2001 at a grade of at least D) AND must have completed 1 of MA1102R/MA1505/MA1507/MA1521/MA2002 at a grade of at least D OR must have completed  MA1511/MA1512 at a grade of at least D",
    "corequisite": "If undertaking an Undergraduate Degree THEN must be enrolled in CS5647 at a grade of at least D",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS4350",
    "title": "Game Development Project",
    "description": "The objective of this project-based module is to provide an opportunity for the students to work in a group to design and develop a game following the main stages of game development process. The module will focus on the design of core dynamic, game mechanics, strategy, progression, balancing, game levels, interface and technical features including 3D graphics, animation, AI, physics, and networking. In addition, software engineering principles will be practised in developing the game software.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 2, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"NM3216\"/CS3247 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS4351",
    "title": "Real-Time Graphics",
    "description": "Real-time graphics is driving many interactive computer applications, such as 3D games, VR, 3D modelling, and data visualization. Recent rendering techniques have been heavily exploiting the powerful graphics hardware to\nachieve unprecedented performance and effects. In this module, students study the modern real-time rendering pipeline and GPU architecture, learn about modern and traditional real-time rendering techniques, and write\nshaders to implement these techniques for the GPU. The syllabus includes multiple-pass rendering; shading and reflection models; procedural texture-mapping and shading; lights and shadows; noise and natural materials;\nnon-photorealistic rendering; volume rendering; deferred shading; scene management; post-rendering processing; performance analysis and optimization.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3241 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS4880",
    "title": "Digital Entrepreneurship",
    "description": "The course will cover trends in the digital marketplace and emerging high-growth opportunities for digital businesses. The course will highlight issues facing companies with new products and services in an ever-changing digital marketplace. While the course will provide an overview on structuring of new ventures, the primary focus will be on opportunity identification and sources of competitive differentiation, particularly as they relate to digital innovation. To hone these skills the students will communicate by crafting a business plan.",
    "moduleCredit": "4",
    "department": "SoC Dean's Office",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5201",
    "title": "Foundation in Theoretical CS",
    "description": "The purpose of this module is to test the students on basic concepts in theoretical computer science. In particular, the students will be tested on the following areas.\n\nA.\tDesign and Analysis of Algorithms\nB.\tTheory of Computation\nC.\tProgramming Languages\nD.\tLogic and Formal Systems\n\nThe respective undergraduate modules: CS3230, CS3231, CS3212, CS3234",
    "moduleCredit": "0",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 0, 10],
    "semesterData": []
  },
  {
    "moduleCode": "CS5202",
    "title": "Foundation in Computer Systems",
    "description": "The purpose of this module is to test the students on basic concepts in computer systems. In particular, the students will be tested on the following topics.\n\nA. Advanced Operating Systems\nB. Computer Networks II\nC. Database Management Systems\nD. Computer Architecture\n\nThe respective undergraduate modules:    CS3221, CS3103, CS3223, CS3220",
    "moduleCredit": "0",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 0, 0, 0, 10],
    "semesterData": []
  },
  {
    "moduleCode": "CS5215",
    "title": "Constraint Processing",
    "description": "Constraint programming is an alternative approach to computing in which the programming process is limited to a generation of requirements (constraints) and to solving of them by general methods and domain dependent methods. This module discusses the basic aspects of constraint programming, focusing on how to model and solve the constraints. Students will learn problem modelling by means of constraints and the main techniques used to solve such systems of constraints. The module focuses on the fundamental notions of constraint satisfaction problems, local consistency, constraint propagation, complete and incomplete constraint solvers, and various search methods.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS3212\"/CS2104 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5216",
    "title": "Logic Programming and Constraints",
    "description": "This course aims to discuss the basic aspects of constraint and logic programming. It will focus on constraint logic programming and its realisation in Eclipse, a system that extends Prolog language by means of constraints. The course will focus on problem modelling by means of constraints, and on logic programming techniques concerned with constraints. Students will learn in detail a number of modules of the Eclipse system that aims to increase the versatility of programming by means of constraints. These include: fd (programming over finite domains), clp(R) (solving equations over reals), CHR (constraint handling rules).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5218",
    "title": "Principles and Practice of Program Analysis",
    "description": "Program analysis denotes automated processes for predicting, estimating or proving properties of program behavior, whether functional or non-functional.  Example uses are compiler optimization, bug detection, performance evaluation, detection of security vulnerabilities, amongst many others.  This module first provides the rigorous mathematical foundations. This step is necessary in order to understand the common elements within the broad area of software analysis.  Secondly, through the use of a state-of-the-art program analysis system, this module provides hands-on instruction on programming real-life analyses.  In the end, the graduating student will be able to address a broad spectrum of program analysis in a practical way.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS4212/CS4215 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5219",
    "title": "Automated Software Validation",
    "description": "The immense growth in the complexity of software has increased the scope of errors, which are often critical. The nature of these errors is diverse, resulting from the diversity of the various classes of software: sequential, multithreaded, reactive and real-time. In this course, we will study techniques for verification, run-time monitoring and debugging of software which help us to give certain guarantees against such errors. The focus will be on automated validation techniques.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 2, 6],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS3212\"/CS2104 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-30T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5222",
    "title": "Advanced Computer Architecture",
    "description": "The aim of this module is to introduce the state-of-the-art architectural advances underlying the current generation of computing systems. A review of pipelined processor design and hierarchical memory design is followed by advanced topics including exploitation of instruction-level parallelism through dynamic instruction scheduling and speculation, exploiting thread-level parallelism through\nmultiprocessors, and optimizations for memory and storage subsystems. Throughout the module, particular emphasis will be placed on cost-performance-power-reliability trade-offs in designing the different architectural components.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS3220/CS4223 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5223",
    "title": "Distributed Systems",
    "description": "The topic of Distributed Systems is now garnering increasing importance, especially with the advancement in technology of the Internet and WWW. The aim of this module is to provide students with basic concepts and principles of distributed operating systems, interprocess communications, distributed file systems, shared data, and the middleware approach. The module is taught in seminar style, and several case studies are included, e.g. CORBA.   Topics: Introduction - Characteristics of Distributed Systems; Process Management Communication in Distributed Systems; Distributed Synchronisation; Distributed Real-time Systems; File Systems; Naming Security; Fault Tolerant Distributed Systems; Distributed Simulation; WWW as an application of Distributed System.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3211 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5224",
    "title": "Cloud Computing",
    "description": "This module aims to provide an overview of the design, management and application of cloud computing. The topics include managing virtualization, cloud computing environments, cloud design patterns and use cases, data centre architectures and technologies, cloud services fulfillment and assurance, orchestration and automation of cloud resources, cloud capacity management, cloud economics, case studies.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5226",
    "title": "Database Tuning",
    "description": "This module is concerned with the performance related database administration issues. The topics include: an overview of query optimisation techniques, physical data base design, system configuration, buffer management, performance analysis and tuning techniques.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3223 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5228",
    "title": "Knowledge Discovery and Data Mining",
    "description": "This course introduces fundamental principles behind data mining and efficient techniques for mining large databases. It provides an overview of the algorithmic aspect of data mining its efficiency (high-dimensional database indexing, OLAP, data reduction, compression techniques) and effectiveness (machine learning involving greedy search, branch and bound, stochastic search, parameter optimisation). Efficient techniques covered include association rules mining (Apriori algorithm, correlation search, constrained association rule discovery), classifier induction (decision trees, RainForest, SLIQ; Support vector machine; Naive Bayesian; classification based on association / visualisation), cluster analysis (k-means, k-mediods, DBSCAN, OPTICS, DENCLUE, STING, CLUSEQ, ROCK etc), and outliers/deviants detection (LOF, Distance-based outlier etc).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 0, 4],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of CS2109S/CS3243 at a grade of at least D AND must have completed CS2102 at a grade of at least D AND (( must have completed 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D) OR ( must have completed 1 of MA2116/MA2216/ST2131 at a grade of at least D AND must have completed 1 of DSC2008/ST1131/ST1131A/ST1232 at a grade of at least D)))",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5229",
    "title": "Advanced Computer Networks",
    "description": "This course covers advanced fundamental principles of computer networks and techniques for networking. The goal of this course is to teach these fundamentals/techniques that will remain important and relevant regardless of the hot topics in networks and networking. Briefly, the topics include advanced network architecture and design principles, protocol mechanisms, implementation principles and software engineering practices, network algorithmic, network simulation techniques and tools, performance analysis and measurement, and protocol specification/verification techniques.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 2, 6],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS4226/EE4210 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-24T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5230",
    "title": "Computational Complexity",
    "description": "The aim of this module is to study the various measures of difficulty of problem solving in computing, and to introduce some techniques in theoretical computer science such as non-determinism, digitalisation, simulation, padding, reduction, randomisation and interaction. Topics covered include: space and time complexity - the classes P, NP, co-NP, PSPACE, EXP, etc.; tape compression; linear speedup; polynomial reduction; Cook's theorem; Savitch's theorem; translation lemma; Gap theorem; NP-completeness and NP-hard problems; probabilistic complexity classes; approximation algorithms; and interactive protocols.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed \"CS4232\" at a grade of at least D\n)",
    "preclusion": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust not have completed \"CS4230\" at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-26T05:00:00.000Z",
        "examDuration": 180,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5231",
    "title": "Systems Security",
    "description": "This module introduces fundamental notions and requirements in computer system security and the mechanisms that provide security in various systems and applications. It aims to teach students the security perspective of popular computer systems, such as desktop systems, mobile systems, and web-based systems. Its topics include software security, operating system security, mobile security, web security, trusted platforms, and auditing and forensic analysis.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3235 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5232",
    "title": "Formal Specification and Design Techniques",
    "description": "The primary role of the formal specification is to provide a precise and unambiguous description of a computer system. A formal specification allows the system designer to verify important properties and detect design error before system development begins. The objective of this course is to study various formal specification and design techniques for modelling (1) object-oriented systems, (2) real-time distributed systems, and (3) concurrent reactive systems. The course will focus on the state-based notations Z/Object-Z, event-based notation CSP/Timed-CSP. Graphical modelling notations, such as StateChart and UML (Unified Modelling Language) will also be addressed.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS1231/CS1231S/MA1100/MA1100T at a grade of at least D\n\tand\n\tmust have completed 1 of CS2103/CS2103T/CS2113/CS2113T at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5233",
    "title": "Simulation and Modelling Techniques",
    "description": "This module aims to provide students with a working knowledge of applying simulation techniques to model, simulate and study complex systems. It covers techniques in simulation model design, model execution, and model analysis. Students will have hands-on experience using a simulation package. The module will also introduce concepts of parallel and distributed simulation, and high level architecture.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking Undergraduate Degree then ( CS4231 at a grade of at least D and ( ( 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D ) or ( either of \"MA2216\"/ST2131 at a grade of at least D and 1 of \"DSC2008\"/\"ST1131A\"/ST1131/ST1232 at a grade of at least D ) ) )",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-24T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5234",
    "title": "Algorithms at Scale",
    "description": "This course presents advanced techniques for the design and analysis of algorithms and data structures, with emphasis on efficiency and scalability. It will cover a variety of algorithmic topics that arise when coping with very large data sets. How do you design algorithms that scale well? How do you process streaming data? How do you construct algorithms that run efficiently on modern hardware? The goal of this module is to cover modern tools and techniques in algorithm design.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5236",
    "title": "Advanced Automata Theory",
    "description": "In computer science, automata are an important tool for many theoretical investigations. Various types of automata have been used to characterise complexity classes. This module covers automata theory in depth, describes the\nChomsky hierarchy, and introduces various advanced topics including automata structures, automata on infinite words, automata on trees and the learnability of classes of regular languages from queries and positive data.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS4232\"/CS3231 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-28T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5237",
    "title": "Computational Geometry and Applications",
    "description": "The course aims to provide students with a geometric viewpoint in problem solving. It lays a foundation for solving problems with computational geometric methods, and bridges the gap between theoretical computer science and the real applications by introducing application areas, such as bio-geometric modelling, computer graphics and mesh generation, as well as other engineering problems such as reverse engineering. Topics include: convex-hull algorithms, simplicial complexes, union of balls, Voronoi diagram, Delaunay triangulation, lifting and projecting, alpha shape, surface reconstruction, sphere algebra, orthogonality and complementarity, molecular skin surfaces, curvatures and surface meshing, deformation and morphing, etc.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5238",
    "title": "Advanced Combinatorial Methods in Bioinformatics",
    "description": "Biology data are too enormous. Handling them using brute-force approaches becomes impossible and efficient algorithms are required. This module has an in-depth study of some of these advanced algorithms. Through the course, students not only are able to understand these algorithms in detail, but are also given chances to solve some research problems in this field. Topics include sequence comparison, structure comparison and prediction, phylogenetic tree reconstruction and comparison, sequencing by hybridisation, Genome rearrangements, gene network, micro-array.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-26T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5239",
    "title": "Computer System Performance Analysis",
    "description": "The objective of this module is to provide students a working knowledge of computer performance evaluation and capacity planning. They will be able to identify performance bottlenecks, to predict when performance limits of a system will be exceeded, and to characterise present and future workload to perform capacity planning activities. Topics include performance analysis overview; measurement techniques and tools including workload characterisation, instrumentation, benchmarking, analytical modelling techniques including operational analysis, stochastic queuing network analysis; performance of client-server architectures; capacity planning; case studies.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS1020\"/\"CS1020E\"/\"CS2020\"/CS2030/CS2113/CS2113T at a grade of at least D\n\tand\n\t(\n\t\t(\n\t\t\tmust have completed 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D\n\t\t)\n\t\tor\n\t\t(\n\t\t\tmust have completed 1 of \"MA2216\"/ST2131 at a grade of at least D\n\t\t\tand\n\t\t\tmust have completed 1 of \"DSC2008\"/\"ST1131A\"/ST1131/ST1232 at a grade of at least D\n\t\t)\n\t)\n)",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5240",
    "title": "Theoretical Foundations in MultiMedia",
    "description": "The module lays the theoretical foundation for graduate students to do research in multimedia: images, videos, audio, speech, graphics and text documents. The module covers the main theoretical issues common to various multimedia research. These issues provide a general framework within which specific techniques in particular research areas can be understood. Topics include: vector and signal representations of multimedia, spatial and frequency analyses, models and parameter estimation methods. Examples will be drawn from different types of media. Upon completion, students will be well-grounded to pursue further research in computer vision, graphics, natural language processing, audio analysis and multimedia applications.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 1, 3, 3],
    "prerequisite": "if undertaking Undergraduate Degree then ( 1 of \"CG1102\"/\"CG1103\"/\"CS1020\"/\"CS1020E\"/\"CS2020\"/CS2040/CS2040C/CS2040S at a grade of at least D and 1 of \"MA1101R\"/MA1311/MA1508E/MA1513/MA2001 at a grade of at least D and 1 of \"MA2216\"/\"ST1131A\"/EE2012/EE2012A/MA2116/ST1131/ST1232/ST2131/ST2334 at a grade of at least D and ( 1 of \"MA1102\"/\"MA1102R\"/\"MA1507\"/MA1505/MA1521/MA2002 at a grade of at least D or ( MA1511 at a grade of at least D and MA1512 at a grade of at least D ) ) )",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5241",
    "title": "Speech Processing",
    "description": "This module exposes the graduate students to the fundamental theory of speech processing, focusing primarily on automatic speech recognition. Upon completion of this module, students should be able to perform research on speech recognition topics and commercial speech technology development. Topics covered by this module include speech signal processing, automatic speech recognition (ASR), continuous speech recognition, acoustic modelling using the Hidden Markov Model (HMM), language modelling for ASR and advanced speech recognition techniques for state-of-the-art large vocabulary continuous speech recognition (adaptation and robustness, discriminative training and decoding strategies).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 0, 5],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CG1102\"/\"CG1103\"/\"CS1020\"/\"CS1020E\"/\"CS1102\"/\"CS2020\"/CS2030/CS2030S at a grade of at least D\n\tand\n\tmust have completed 1 of CS1231/CS1231S/MA1100/MA1100T at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101R\"/\"MA1506\"/MA2001 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1102R\"/MA1505/MA1521/MA2002 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA2216\"/MA2116/ST1232/ST2131/ST2334 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5242",
    "title": "Neural Networks and Deep Learning",
    "description": "This module provides students with the knowledge of deep neural network and enables them to apply deep learning methods effectively on real world problems. The module emphasizes on the understanding of the principles of neural networks and deep learning; practical guidelines and techniques for deep learning; and their applications. Through assignments and projects, students will design, develop, and evaluate deep learning-based solutions to practical problems, such as those in the areas of computer vision, bioinformatics, fintech, cybersecurity, and games.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 5, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS2109S/CS3244 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5246",
    "title": "Text Mining",
    "description": "Text mining concerns the processing of unstructured natural language text to mine information and knowledge. It is distinguished from data mining in its focus on unstructured text rather than structured data present in traditional databases. Topics include text classification, text clustering, sentiment analysis, text summarization, information extraction (named entity recognition, relation and event extraction), and question answering. The module will emphasize the use of machine learning approaches to text mining.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 0, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CS2103/CS2103T at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101R\"/MA1311/MA1508E/MA1513/MA2001 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA2216\"/EE2012/EE2012A/MA2116/ST2131/ST2334 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5248",
    "title": "Systems Support for Continuous Media",
    "description": "This module is targeted at computer science graduate students and covers the major aspects of building streaming media applications -- from coding to transmission to playback. Issues such as transport protocols, control protocols, caching, buffering, synchronisation and adaptations will be examined.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS2106 at a grade of at least D\n\tand\n\tmust have completed CS4226 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5249",
    "title": "Audio in Multimedia Systems",
    "description": "This module aims at providing students with an in-depth understanding of modern audio technologies, ranging from low-level audio representation to high-level content analysis; and from basic waveform to advanced audio compression and compressed domain processing. Upon completion of this module, students should be able to perform research such as narrowing the semantic gap between low-level features and high-level concepts. Topics include discretization, sampling, audio formats, audio synthesis, spatial audio, feature extraction, speech recognition, audio segmentation and summarization, source separation, and audio compression.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "If undertaking an Undergraduate Degree  THEN ( must have completed  1 of  CS2030/CS2030S at a grade of at least D  AND  must have completed  1 of  CS2040/CS2040S at a grade of at least D  AND  must have completed  1 of  MA1102R/MA1505/MA2002 at a grade of at least D  AND  must have completed  1 of  MA1101R/MA1506/MA2001 at a grade of at least D  AND  must have completed  1 of  CS1231/CS1231S/MA1100/MA1100T at a grade of at least D)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5250",
    "title": "Advanced Operating Systems",
    "description": "The module covers a broad range of issues in the design and implementation of modern advanced operating systems. The topics covered in this module includes OS design strategies (including microkernels, mobile, embedded and real-time operating systems and the component’s interfaces), priority and resource allocation strategies; scheduling algorithms (including for multi-core, multi-processors); naming, protection and security; UI and windowing systems; file system implementations (including network and distributed file systems); failure and recovery; and virtualization and the Internet-ready OS. They extend and provide in-depth coverage of material in earlier prerequisite OS modules.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CG2271/CS2106 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-25T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5260",
    "title": "Neural Networks and Deep Learning II",
    "description": "This module is a follow-up to CS5242 and covers\nadvanced topics in neural networks and deep learning.\nThis module explores the underlying mechanism of a\nvariety of different types of learning models: unsupervised,\nsemi-supervised, and adversarial learning models, that\nare not covered in CS5242. Topics may include:\ngenerative adversarial networks, adversarial machine\nlearning, zero-shot learning, geometric deep learning,\nneural architecture search.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS5242 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5271",
    "title": "Performance Analysis of Embedded Systems",
    "description": "Modern embedded systems are heterogeneous collections of multiple hardware and software components, which might be designed by different vendors and have different\ninterfaces. This heterogeneity, coupled with the complexity of embedded software and the complex features of modern processors make performance analysis of such systems a difficult problem. In recent years, there has been a lot of work in this area, especially because of its practical importance. In this course, we will discuss some of this work with the aim of getting a broad overview of this area. These will include formal models, algorithms, various simulation techniques, tools and case studies in the specific context of embedded systems, which significantly differ from techniques used for the performance analysis of general computer systems. Our focus will be on system-level design techniques, with the aim of critically accessing known models and methods in terms of their generality and ability at different stages of an embedded system design process. This course will be suitable for both graduate students and honors-year undergraduate students, who are interested in the general area of Computer Engineering. The projects/assignments will consist of a mix of theory and implementation and there will be enough flexibility to incline more towards one or the other direction.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 2, 6],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2271\"/CG2271/CS3220/CS4223 at a grade of at least D\n\tand\n\tmust have completed CS4212 at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5272",
    "title": "Embedded Software Design",
    "description": "This course focuses on the design and implementation of software for programmable embedded systems. Embedded computing systems hidden inside everyday electronic devices such as hand-phones, digital cameras etc. are becoming more and more prevalent. However, the heterogeneous nature of the underlying hardware as well as tight constraints on size, cost, power, and timing pose significant challenges to embedded software development. This course presents techniques that address these distinctive characteristics of embedded software implementation. Topics include embedded software development for programmable processors and reconfigurable hardware, component-based design, optimizations for performance, power, code size, operating system issues, and case studies of available systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of CG2271/CS2106 at a grade of at least D\n\tand\n\tmust have completed 1 of CS2103/CS2103T/CS2113/CS2113T at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5321",
    "title": "Network Security",
    "description": "The objective of this module is to introduce students to the various issues that arise in securing the networks, and study the state-of-the-art techniques for addressing these challenges. A number of most damaging attacks on computer systems involve the exploitation of network infrastructure. This module provides an in-depth study of network attack techniques and methods to defend against them. Topics include basic concepts in network security; firewalls and virtual private networks; network intrusion detection; denial of service (DoS); traffic analysis; secure routing protocols; protocol scrubbing; and advanced topics such as wireless network security.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3235 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5322",
    "title": "Database Security",
    "description": "Database security has a great impact on the design of today's information systems. This course will provide an overview of database security concepts and techniques and discuss new directions of database security in the context of Internet information management. Topics covered include: Access control models for DBMSs, Inference controls, XML database security, Encrypted databases, Digital credentials and PKIs, Trust in open systems, and Peer-to-peer system security.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3223 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-30T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5330",
    "title": "Randomized Algorithms",
    "description": "The module will cover basic concepts in the design and analysis of randomized algorithms. It will cover both basic techniques, such as Chernoff bounds, random walks, and the probabilistic method, and a variety of practical algorithmic applications, such as load balancing, hash functions, and graph/network algorithms. The focus will be on utilizing randomization to develop algorithms that are more efficient and/or simpler than their deterministic counterparts.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5331",
    "title": "Web Security",
    "description": "This module aims to prepare graduate students for understanding the security of the latest web platform and its interplay with operating systems and the cloud infrastructure. The topics covered include the design of web browsers and web \napplications, vulnerabilities in web applications and web browsers, design of web scanners, authentication in web-based platforms, security policies and enforcement mechanisms. This module also covers security topics on the interface between the \nweb platform and the backend systems, such as the underlying database systems and cloud infrastructure.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3235 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown", "B"]
      }
    ]
  },
  {
    "moduleCode": "CS5332",
    "title": "Biometric Authentication",
    "description": "Biometrics (such as fingerprint, iris images) are commonly used for authentication. This module covers authentication methods, different types of biometrics, pattern recognition, performance measurement, spoofing attacks, as well as issues such as privacy, user acceptance, and standards compliance. Students will gain a solid understanding of the fundamentals of the technology underlying biometric authentication, and the key issues to be addressed for successful deployment. Both the theoretical and practical aspects of biometrics authentication will be discussed.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 2, 6],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2010\"/\"CS2020\"/CS2040/CS2040C/CS2040S at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1102R\"/\"MA1507\"/MA1505/MA1521/MA2002 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101R\"/MA1311/MA1508E/MA1513/MA2001 at a grade of at least D\n\tand\n\t(\n\t\t(\n\t\t\tmust have completed 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D\n\t\t)\n\t\tor\n\t\t(\n\t\t\tmust have completed 1 of \"MA2216\"/MA2116/ST2131 at a grade of at least D\n\t\t\tand\n\t\t\tmust have completed 1 of \"DSC2008\"/\"ST1131A\"/ST1131/ST1232 at a grade of at least D\n\t\t)\n\t)\n)",
    "attributes": {
      "lab": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5338",
    "title": "Principles of Planning and Decision Making",
    "description": "This course introduces graduate students to the principles and techniques commonly used to tackle AI planning and decision making problems. It examines how to pose and solve decision making and planning problems in deterministic, probabilistic, and adversarial environments for both single and multiagent problems. Topics include deterministic planning, decision theory, decision networks, Markov decision processes, game theory, multi-agent planning, and reinforcement learning.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 0, 3],
    "prerequisite": "If undertaking an Undergraduate Degree THEN must have completed 1 of MA2116/MA2216/ST2131/ST2334 at a grade of at least D AND must have completed 1 of CS3243/CS3263 at a grade of at least D",
    "preclusion": "If undertaking an Undergraduate Degree THEN must not have completed CS4246 at a grade of at least D",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5339",
    "title": "Theory and Algorithms for Machine Learning",
    "description": "The module aims to provide a broad theoretical understanding of machine learning and how the theory guides the development of algorithms and applications. Topics covered include the approximation capabilities of common function classes used for machine learning, such as decision trees, neural networks, and support vector machines, the sample complexity of learning different function classes and methods of reducing the estimation error such as regularization and model selection, and computational methods used for learning such as convex optimization, greedy methods, and stochastic gradient descent.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 4, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS3264\"/CS3244 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-24T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5340",
    "title": "Uncertainty Modelling in AI",
    "description": "The module covers modelling methods that are suitable for reasoning with uncertainty. The main focus will be on probabilistic models including Bayesian networks and Markov networks. Topics include representing conditional independence, building graphical models, inference using graphical models and learning from data. Selected applications in various domains such as speech, vision, natural language processing, medical informatics, bioinformatics, data mining and others will be discussed.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "If undertaking an Undergraduate Degree THEN ( must have completed 1 of CS3243/CS3263 at a grade of at least D AND (( must have completed 1 of EE2012/EE2012A/ST2132/ST2334 at a grade of at least D) OR ( must have completed 1 of MA2116/MA2216/ST2131 at a grade of at least D AND must have completed 1 of DSC2008/ST1131/ST1131A/ST1232 at a grade of at least D)))",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-21T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5342",
    "title": "Multimedia Computing and Applications",
    "description": "",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS3246\"/\"CS4341\" at a grade of at least D\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5343",
    "title": "Advanced Computer Animation",
    "description": "From the covert digital water in Titanic to the mixed real and virtual actors in Avatar, from the arm-controllable Wii games to the completely full-body-play Xbox Kinect games, computer animation technologies have advanced significantly during the past decades, both in the movie and the game industries. This module reveals all the exciting behind-the-scene techniques that make these movies and games possible, including but not limited to motion capture, fluid animation, facial animation, and fullbody character animation. This is a project-based course that aims to provide strong foundation on advanced computer animation methods and prepare students for research in animation.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 1, 5.5, 1.5],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\t(\n\t\tmust have completed 1 of \"MA1101R\"/\"MA1506\"/MA2001 at a grade of at least D\n\t\tand\n\t\tmust have completed 1 of \"MA1102R\"/MA1505/MA1521/MA2002 at a grade of at least D\n\t\tand\n\t\tmust have completed CS3241 at a grade of at least D\n\t)\n\tand\n\t(\n\t\t(\n\t\t\tmust have completed 1 of CS2030/CS2030S/CS2113/CS2113T at a grade of at least D\n\t\t\tand\n\t\t\tmust have completed 1 of CS2040/CS2040C/CS2040S at a grade of at least D\n\t\t)\n\t\tor\n\t\tmust have completed 1 of \"CS2010\"/CS2030/CS2030S at a grade of at least D\n\t)\n)",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5344",
    "title": "Big-Data Analytics Technology",
    "description": "This module analysis of data which can not fit in main memory and application of such analysis to web applications. The topics covered include: map-reduce as a tool for creating parallel algorithms that operate on very large amount of data, similarity search, data-streaming processing, search engine techonology, clustering of very large, high-dimensional datasets.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed BT5110 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5345",
    "title": "Social and Digital Media Analytics",
    "description": "There is a proliferation of social and digital media content data today generated by both consumers and firms. This module aims to introduce concepts, methods and tools for social and digital media analytics, and in the application and management of such analytics efforts in industry sectors such as telecommunications and consumer retail. Topics covered include network data in social and digital media, formal methods for social network analysis, analytics and visualization tools, population and structural models for network dynamics, and various industry case studies on social and digital media analytics. Instructional methods will include lectures, case analyses, assignments and projects.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5346",
    "title": "Information Visualisation",
    "description": "This module aims to bring together individual pedagogies\nof design, information, and computation, for teaching the\nanalysis and representation of data for visualisation.\nStudents will learn the methodology of developing and\nevaluating an information visualisation solution, common\ninformation visualisation techniques (such as those for\ntopical, spatial, hierarchical, temporal, and relational data),\nand methods for scaling up interactive visualisation with big\ndata. After the module, students should be able to use the\nexisting visualisation tools for building useful, interactive,\ninformation visualisation to facilitate complex data\nanalytics, exploration, understanding, and pattern\ndiscovery.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 2, 2, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS2010\"/CS2040/CS2040C/CS2040S at a grade of at least D\n\tand\n\tmust have completed CS2102 at a grade of at least D\n\tand\n\tmust have completed CS3240 at a grade of at least D\n\tand\n\tmust have completed 1 of \"DSC2008\"/\"ST1131A\"/EE2012/EE2012A/ST1131/ST1232/ST2132/ST2334 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5351",
    "title": "The Business of Software",
    "description": "The software business well exceeds a trillion dollars, covering companies that sell software products as well as corporations that depend primarily on software technology for their business. The course will cover the evolution of software business, and the continuous reshaping of industry. Students will be exposed to market dynamics affecting the birth, growth and transition of these businesses. The course will investigate business strategies followed by these companies. Students will be encouraged to reflect on trends emerging from the integration of innovative technologies and evolving consumer and enterprise needs. There will be special emphasis on Asia-Pacific markets and businesses.",
    "moduleCredit": "4",
    "department": "Information Systems and Analytics",
    "faculty": "Computing",
    "workload": [3, 0, 0, 0, 4],
    "prerequisite": "If undertaking an Undergraduate Degree THEN must be undertaking 1 of 0300BZPHON Bachelor of Science (Business Analytics) (Hons) Co-op, 0300BZAHON Bachelor of Science (Business Analytics) (Hons), 0300ISCHON Bachelor of Computing (Information Security) (Hons), 0300ISPHON Bachelor of Computing (Information Security) (Hons) Co-op, 0300CSHON Bachelor of Computing (Computer Science) (Hons), 2001CEGHON Bachelor of Engineering (Computer Engineering) (Hons), 0300ISHON Bachelor of Computing (Information Systems) (Hons) AND must be Year 4",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5421",
    "title": "Database Applications Design and Tuning",
    "description": "This module addresses the design and performance tuning of database applications. The syllabus focuses on relational database applications implemented with relational database management systems. Topics covered include normalisation theory (functional, multi-valued and join dependency, normal forms, decomposition and synthesis methods), entity relationship approach and SQL tuning (performance evaluation, execution plan verification, indexing, de-normalization, code level and transactions tuning). The syllabus optionally includes selected topics in the technologies, design and performance tuning of nonrelational database applications (for instance, network and hierarchical models and nested relational model for an historical perspective, as well as XML and NoSQL systems for a modern perspective).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5422",
    "title": "Wireless Networking",
    "description": "This module aims to provide solid foundation for students in the area of wireless networks and introduces students to the emerging area of cyber-physical-system/Internet-of-Things. The module will cover wireless networking across all layers of the networking stack including physical, link, MAC, routing and application layers. Different network technologies with different characteristic will also be covered, including cellular networks, Wi-Fi, Bluetooth and ZigBee. Some key concepts that cut across all layers and network types are mobility management, energy efficiency, and integration of sensing and communications. The module emphasizes on exposing students to practical network system issues through building software prototypes.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 2, 4, 2],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-04-24T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5424",
    "title": "Distributed Databases",
    "description": "This module studies the management of data in a distributed environment. It covers the fundamental principles of distributed data management and includes distribution design, data integration, distributed query processing and optimization, distributed transaction management, and replication. It will also look at how these techniques can be adapted to support database management in emerging technologies (e.g., parallel systems, peer-to-peer systems, cloud computing).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-22T01:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5425",
    "title": "Big Data Systems for Data Science",
    "description": "Data science incorporates varying elements and builds on techniques and theories from many fields, including statistics, data engineering, data mining, visualization, data warehousing, and high-performance computing systems with the goal of extracting meaning from big data and creating data products. Data science needs advanced computing systems such as Apache Hadoop and Spark to address big data challenges. In this module, students will learn various computing systems and optimization techniques that are used in data science with emphasis on the system building and algorithmic optimizations of these techniques.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5430",
    "title": "Foundations of Modern Cryptography",
    "description": "This module introduces students to the theoretical underpinnings of cryptography. Modern cryptographic primitives can generate strings that look random, send messages that only intended recipients can read, authenticate individuals, run computations on sensitive data without compromising privacy, and perform several other seemingly paradoxical tasks. We will study a number of these primitives with emphasis on how to (i) define their security requirements rigorously, (ii) construct them, and (iii) prove that these constructions are secure. We will focus on the theoretical foundations using tools from algebra, number theory, combinatorics, and probability. This will involve rigorous mathematical definitions and",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 5, 2],
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5439",
    "title": "Software Security",
    "description": "Software engineering processes need to include security considerations in the modern world. This module familiarizes students to security issues in different stages of the software life-cycle. At the end of the module, the students are expected to understand secure programming practices, be able to analyse and check for impact of malicious inputs in programs, and employ specific testing techniques which can help detect software vulnerabilities.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 2, 5],
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true,
      "ssgf": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-22T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-02T05:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5446",
    "title": "AI Planning and Decision Making",
    "description": "This module introduces the major concepts and paradigms in planning and decision making in complex environments. It examines issues, challenges, and techniques in problem representation, goal or objective specification, response selection, and action consequence for a wide range of strategic and tactical planning and decision making situations. Topics covered include deterministic and nondeterministic planning, practical planning and acting under resource constraints and uncertainty, expected utility and rational decision making, decision networks, Markov decision processes, elementary game theory, and multiagent planning and decision making.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "attributes": {
      "lab": true,
      "mpes1": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B", "Unknown"]
      },
      {
        "semester": 2,
        "examDate": "2023-05-02T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B", "Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5461",
    "title": "Algorithmic Mechanism Design",
    "description": "Recent years have seen a dramatic rise in the use of\nalgorithms for solving problems involving strategic\ndecision makers. Deployed algorithms now assist in a\nvariety of economic interactions: assigning medical\nresidents to schools, allocating students to courses,\nallocating security resources in airports, allocating\ncomputational resources and dividing rent. We will\nexplore foundational topics at the intersection of\neconomics and computation, starting with the foundations\nof game theory: Nash equilibria, the theory of cooperative\ngames, before proceeding to covering more advanced\ntopics: matching algorithms, allocation of indivisible goods,\nand mechanism design.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "examDate": "2022-11-28T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5469",
    "title": "Fundamentals of Logic in Computer Science",
    "description": "Logic is often called the \"calculus of computer science\" due to the central role played by logic in computer science akin to the role played by calculus in physics and engineering. This module will formally introduce and prove some of the fundamental results in logic to provide students with a rigorous introduction of syntax, semantics, decision procedures, and complexity of propositional and\nfirst-order logic. The course will be taught from a computer science perspective with particular emphasis on algorithmic and computational complexity components.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5476",
    "title": "IoT Security",
    "description": "With the advent of the Internet-of-Things, the computing\nparadigm is quickly changing from the traditional cyber\ndomain to cyber-physical domain. This is made possible\nfrom devices that are equipped with sensors and actuators\nthat interact with the physical world. In this module, we will\ninvestigate how such sensing systems affect the notion of\ncomputer security. We will also explore the state-of-the-art\nresearch in the areas of sensing systems and how they\ncan provide benefits to the security of the Internet-ofThings. Furthermore, this module will also investigate how\nan attacker may compromise the sensing information to\nexploit security vulnerabilities in these systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS5477",
    "title": "3D Computer Vision",
    "description": "One of the most important capability for robots such as self-driving cars, domestic mobile robots, and drones to achieve full autonomy is the ability to perceive the 3D environment. A camera is an excellent choice as the main sensory device for robotic perception because it produces information-rich images, and is lightweight, low cost and requires little or no maintenance. This module covers the mathematical concepts and algorithms that allow us to recover the 3D geometry of the camera motions and the structures in its environment. Topics include projective geometry, camera model, one-/two-/three-/N-View reconstructions and stereo, generalized cameras and nonrigid structure-from-motion.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 4, 3],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "examDate": "2023-05-03T09:00:00.000Z",
        "examDuration": 120,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5478",
    "title": "Intelligent Robots: Algorithms and Systems",
    "description": "This module introduces the core algorithms and system architectures of intelligent robots. It examines the main system components for sensing, decision making, and motion control and importantly, their integration for core robot capabilities, such as navigation and manipulation. It covers the key algorithms for robot intelligence through inference, planning, and learning, and also provides some practical experiences with modern robot systems. A variety of Illustrative examples are given, e.g., self-driving cars, aerial drones, and object manipulation.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 5, 2],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["Unknown"]
      }
    ]
  },
  {
    "moduleCode": "CS5562",
    "title": "Trustworthy Machine Learning",
    "description": "This module covers theoretical foundations of trustworthy machine learning. It covers tools for the analysis of privacy, robustness, and fairness in machine learning using techniques from statistics, probability, and machine learning. Some questions considered include Can we trust machine learning frameworks to access sensitive personal data? Can we trust algorithms to learn robust decision rules in the presence of adversarial and noisy data? Can we build algorithms that provide fair predictions and avoid discrimination? Can we make machine learning models more verifiable, interpretable, ethical, and accountable? The module provides an algorithmic approach towards defining and achieving trustworthy machine learning.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 0, 2],
    "prerequisite": "If undertaking Undergraduate Degree THEN ( CS3230:D AND one of EE2012:D, EE2012A:D, MA2116:D, MA2216:D, ST2131:D, ST2334:D AND CS3244:D)",
    "preclusion": "If undertaking Undergraduate Degree THEN ( CS6283:D)",
    "attributes": {
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS5647",
    "title": "Sound and Music Computing",
    "description": "This module introduces the fundamental technologies employed in Sound and Music Computing focusing on three major categories: speech, music, and environmental sound. This module introduces the concept of sound and its representations in the analog and digital domains, as well as in time and frequency domains. Moreover, this module provides hands-on instruction on relevant machine learning tools, and an in-depth review of related technologies in sound data analytics (Automatic Speech Recognition, Automatic Music Transcription and Sound Event Detection) leading to a group project. Topics in sound synthesis, automatic music generation and music information retrieval will be covered for breadth.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "attributes": {
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6101",
    "title": "Exploration of Computer Science Research",
    "description": "This module introduces CS graduate students to various research areas in Computer Science. Study groups are organised for major research areas. Each study group provides a forum for students to read, present and discuss\nresearch papers, and acquire the basic research skills for literature review and critical comparison of existing work. Students will also gain a first experience in technical presentation and writing. This module will be graded as “Completed Satisfactory” or “Completed Unsatisfactory” (CS/CU).",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [0, 2, 0, 1, 7],
    "attributes": {
      "lab": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": []
      },
      {
        "semester": 2,
        "covidZones": []
      }
    ]
  },
  {
    "moduleCode": "CS6202",
    "title": "Advanced Topics in Programming Languages",
    "description": "This module discusses the contemporary concepts in the design and implementation of major programming languages and systems. It aims to provide students with advanced technical knowledge in evaluating, designing, and implementing an efficient and expressive programming language/system. Topics are selected from a group of contemporary issues that has substantial impact in the development of programming languages/systems, either in terms of performance efficiency or programming expressivity. These include, but not restricted to, computational models, program semantics, concurrency theory, garbage collection techniques, program analysis, type inference, program calculation and transformation, run-time profiling, implementation models, meta-programming.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6203",
    "title": "Advanced Topics in Database Systems",
    "description": "This module covers the topics in data base management systems with current research and industrial interests and importance. Examples of topics include multimedia data management, object-oriented database technology, data warehousing and data mining, integration of heterogeneous and legacy systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6204",
    "title": "Advanced Topics in Networking",
    "description": "This graduate level course covers a broad range of the latest developments in computer networking and telecommunications in terms of new techniques and technologies, trends, open research issues and some related new principles and approaches in networking. Selected topics covered via class lectures and assigned readings include developments in the past three years. Upon completion of this course, the student will be able to understand the latest issues and proposed solutions in networking, and acquire the skills and methodology for identifying research problems. This course will help prepare students towards a research career in networking.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 2, 6],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6205",
    "title": "Advanced Modelling & Simulation",
    "description": "The aim of this course is to provide students with the ability to model, simulate and analyse complex systems in a reasonable time. This course is divided into three parts and covers advanced techniques in simulation model design, model execution, and model analysis. A selection of model design techniques such as conceptual models, declarative models, functional models, constraint models, and multi-models will be discussed. Model execution techniques include discussion of serial and parallel discrete-event simulation algorithms. For model analysis, topics include input-output analysis, variance reduction techniques and experimental design.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6206",
    "title": "Advanced Topics in Human-Computer Interaction",
    "description": "This module covers advanced topics in human computer interaction that are of current research or application interests. Its aim is to examine both the theoretical bases that underlie the design of interfaces and advanced technologies for human computer interactions. A wide range of topics may be covered including psychological theories, organisational behaviour, virtual reality, augmented reality, and computer-supported cooperative work. The module illustrates where and when the theories are applicable, demonstrates the solutions using a combination of scientific theory understanding and engineering modelling. It also illustrates advanced technologies that form part of the solutions.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6207",
    "title": "Advanced Natural Language Processing",
    "description": "The module aims to prepare students to embark on research in natural language processing (NLP). At the end of the course, the students will have experience in reading and critiquing research papers, and will have undertaken a substantial project on some aspects of NLP research. Topics covered include: Statistical parsing, Word sense disambiguation, SENSEVAL, co-reference resolution, machine translation, question answering.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6208",
    "title": "Advanced Topics in Artificial Intelligence",
    "description": "This module covers advanced topics in artificial intelligence that are of current research or application interests. A wide range of topics may be covered including soft computing (fuzzy logic, genetic algorithms, etc.), data mining, machine learning, image and video processing, artificial life, robotics, etc. The exact topics to be taught will depend on the lecturers teaching the module.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed 1 of \"CS3263\"/CS3243 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6209",
    "title": "Topics in Cryptography",
    "description": "The objective of this module is to provide a systematic treatment to cryptography techniques. Topics covered include: mathematical foundations; information theory; classical cryptographic systems: substitution cipher, shift cipher, affine cipher, hill ciphers, permutation cipher, etc.; design and analysis of block ciphers; pseudorandom numbers and sequences; design and analysis of stream cipher cryptosystems; identification and entity authentication; key management techniques; Rabin public-key encryption; McEliece public-key encryption; signature schemes: RSA, EIGamal, and digital signature standard; design and analysis of hash functions; cryptographic protocols; and efficient implementations.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6210",
    "title": "The Art of Computer Science Research",
    "description": "This module aims to provide the meta-skills for research in computer science. How does one discover great research problems? What are the good strategies for solving research problems? How does one write papers or give presentations with great impact? Students will seek answers to these questions by critically examining and assessing successful and less successful examples of\nresearch.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6211",
    "title": "Analytical Performance Modelling for Computer Systems",
    "description": "Constructing simple mathematical models to describe a computer system can help in analysis and understanding of the characteristics, behaviour, and performance of the system. This module introduces students to the modelling techniques, commonly used models, applications of the models to performance modelling of computer systems, and experimental validation of the models. After completing the module, students are expected to have the confidence to construct, analyse, and validate a performance model for a computer system that they are interested in.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 1, 0, 4, 3],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6212",
    "title": "Topics in Media",
    "description": "There is a surge in both the industrial interest and the advancement of media technology. This course aims to bring in the latest advanced development in media technology to the postgraduates.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6213",
    "title": "Special Topics in Distributed Computing",
    "description": "",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6215",
    "title": "Advanced Topics in Program Analysis",
    "description": "Program analysis techniques allow one to automatically\nanalyse the behaviour of a computer program, to identify\nbugs and performance bottlenecks. This graduate level\nmodule covers advanced topics in program analysis that\nare of current research or application interests. Students\nwill explore the state-of-the-art techniques and systems for\nprogram analysis. After taking the module, students will\nbe able to apply advanced automated program analysis\ntools and techniques to verify, test, and debug programs,\nas well as be better prepared for conducting research in\nprogram analysis and apply them in related research\nareas.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6216",
    "title": "Advanced Topics in Machine Learning",
    "description": "This graduate level module covers advanced topics in machine learning that are of current research or application interests. The exact topics to be taught will depend on the lecturers teaching the module. Upon completion of this module, the student will have a deeper understanding on some of the latest research problems in machine learning as well as the state-of-the-art approaches and solutions. This module will help prepare students towards doing research in machine learning.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "prerequisite": "if undertaking Undergraduate Degree then ( either of \"CS3264\"/CS3244 at a grade of at least D )",
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6217",
    "title": "Topics in Prog. Languages & Software Engineering",
    "description": "This module is aimed at graduate students who are doing\nor intend to do advanced research in programming\nlanguages and software engineering. It exposes students\nto recent advances in topics that include, but not limited\nto, software requirements modelling, design, testing,\nanalysis and verification, with focus on emerging\ntechnologies from research which have found increased\nindustry adoption such as software model checking,\nsymbolic execution based testing and automated program\nrepair.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6218",
    "title": "Principles of Prog. Languages & Software Engineering",
    "description": "This module is aimed at graduate students who are doing\nor intend to do advanced research in programming\nlanguages and software engineering. It exposes students\nto recent advances in topics that include, but not limited\nto, deductive verification, program analysis, type systems,\nsoftware specification inference, search-based program\nverification such as model checking, as well as general\nconcepts such as abstraction and modularity in the\ncontext of object-oriented languages.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6219",
    "title": "Advanced Topics in Computer Systems",
    "description": "This graduate-level module covers advanced topics in computer systems that are of current research or application interests. Topics include operating systems,\nsystems architecture and hardware, distributed systems, computer networks, and the interaction between these areas. The exact topics to be taught will depend on the lecturers teaching the module. Upon completion of this module, the student will have a deeper understanding on some of the latest research problems in the area of computer systems, as well as the state-of-the-art approaches to address the problems. This module will help prepare students towards doing research in computer systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6220",
    "title": "Advanced Topics in Data Mining",
    "description": "With the rapid advances of computer and internet technologies, a large amount of data accumulates. Discovering knowledge from the data will give us a competitive advantage. The process of knowledge discovery involves pre-processing the data, mining or discovering patterns from the data, and post-processing the discovered patterns. In this course, we will review and examine the present techniques and the theories behind them and explore new and improved techniques for real world knowledge discovery applications. The course is designed to encourage active discussion, creative thinking, and hands-on project development.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6222",
    "title": "Advanced Topics in Computational Biology",
    "description": "This lecture/seminar-based module introduces some biological investigations enabled by the latest experimental technologies in biology. We focus on the role of computing in helping biologists with these investigations. Students are\nexpected to attend lectures, give seminars, and do projects. The seminars require the students to read papers related to the selected biological investigations, the\nenabling experimental technologies, and associated computational solutions. For the projects, students need to develop some methods/algorithms, integrate existing tools, or enhance existing tools with new functions.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6230",
    "title": "Topics in Information Security",
    "description": "This module aims to prepare graduate students for research and development in information security, by investigating selected topics in cryptography and information theoretic security. Selected topics may include classical issues such as provable security, design of symmetric key ciphers, and public key cryptography, as well as emerging topics, such as pairing-based cryptography, homomorphic encryption, privacy-preserving methods, information hiding, and data forensic. Other topics of current research interests may also be included.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 3, 5],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6231",
    "title": "Advanced Topics in Security and Privacy",
    "description": "This module aims to prepare PhD students for research in security and privacy, by investigating security issues in various theoretical as well as system computer science areas such as software, networks, data analytics and machine learning, etc. It addresses security and privacy concepts and design principles from an adversarial perspective. Selected topics in security and privacy are covered, such as software security, applied cryptography, privacy-preserving data analysis, and design of secure distributed systems. Emerging topics of current research interests may be included as well.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6234",
    "title": "Advanced Algorithms",
    "description": "This module is aimed at graduate students who are doing or intend to do advanced research in algorithms design and analysis in all areas of computer science. The module covers advanced material on combinatorial and graph algorithms with emphasis on efficient algorithms, and explores their use in a variety of application areas. Topics covered include, but are not restricted to, linear programming, graph matching and network flows, approximation algorithms, randomized algorithms, online algorithms, local search algorithms, algorithms for large datasets. The module will be a seminar-based module that will expose students to current research in these areas.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 5, 3],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6235",
    "title": "Advanced Topics in Theoretical Computer Science",
    "description": "This graduate-level module covers advanced topics in the theoretical aspects of computer science that are of current research or application interests. Topics falling under this module include algorithms, theory of computation, formal models, and semantics. The exact topic may vary from year to year and depends on the instructor teaching the module. Upon completion of this module, the student will\nhave a deeper understanding on some of the latest research problems in one of the areas of theoretical computer science. This module will help prepare students towards doing research in theoretical computer science.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6240",
    "title": "Multimedia Analysis",
    "description": "This module aims to provide a comprehensive and rigorous treatment of the main approaches in multimedia (document, image, video, graphics) analysis. Three main themes are covered: (1) representation and modelling of multimedia entities using various modelling approaches, (2) matching of a model with an input entity, and (3) derivation of a model from sample entities. It focuses on the non-vector-space approach, which complements the vector-space approach to multimedia analysis.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 4, 3],
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6241",
    "title": "Advanced Topics in Computer Graphics",
    "description": "This course aims to familiarise graduate students with the ongoing research works in interactive 3D graphics. Topics covered may include: interactive technologies, graphics data structures (shape representation), image-based modelling and rendering, creation of artistic artifacts, viewing large models, and interactive modelling.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6242",
    "title": "Digital Libraries",
    "description": "This module is targeted to graduate students of computer science and information systems wishing to understand the issues in building, using and maintaining large\nvolumes of knowledge in digital libraries. Fundamentals of modern information retrieval is assumed. The course will focus on how such information retrieval technology operationalises traditional information finding skills of the librarian/cataloger/archivist, organised around 5S framework for digital\nlibrary education. Areas within digital libraries that will be covered include collection development, knowledge organisation, DL architecture, user behavior, services, preservation, management and evaluation and DL education and research. Students will round out their knowledge with case studies of how different disciplines (e.g. music, arts, medicine and law) impose different search, usability and maintenance requirements on the digital library.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 6, 2],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6244",
    "title": "Advanced Topics in Robotics",
    "description": "This module presents the advances in robotics research over a broad range of topics such as robot perception, learning, decision making and control, and human-robot interaction. The exact topics of focus may differ in each offering. Through this module, students will get familiar with recent research trends and developments in robotics and prepare for research in robotics and related fields.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 5, 3],
    "prerequisite": "if undertaking an Undergraduate Degree\nthen\n(\n\tmust have completed CS3230 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA2216\"/MA2116/ST2131/ST2334 at a grade of at least D\n\tand\n\tmust have completed 1 of \"MA1101R\"/\"MA1506\"/MA1311/MA1508E/MA2001 at a grade of at least D\n)",
    "attributes": {
      "lab": true,
      "mpes2": true
    },
    "semesterData": [
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6280",
    "title": "Topics in Computer Science: Systems Design for Next Gen Hardware",
    "description": "With the end of Moore's Law, we are witnessing a paradigm shift in computing platforms towards the inclusion of specialized hardware accelerators. In this module, we will explore the designs of system software on these emerging computing hardware platforms. We will first take a broad overview of existing and upcoming specialized hardware devices, including GPU, TPU, FPGA, SmartNICs, reconfigurable network switches, and other specialized ASICs. We will then discuss various topics in systems design for these new hardware platforms, e.g., OS constructs, abstractions, programming models, resource sharing and multiplexing, scheduling, co-designing with applications and algorithms, and joint processing with CPU.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6281",
    "title": "Topics in Computer Science: Immersive Videos",
    "description": "This seminar-style module explores the state-of-the-art advances and open research challenges in immersive videos, including free-viewpoint videos, 360-degree videos, volumetric videos, and light field videos. Discussions will focus on both algorithmic techniques and systems approaches to represent, compress, transmit, and render immersive immersive videos. Issues related to user experiences when interacting with immersive videos will also be discussed. This module aims to prepare graduate students interested in research and development in the intersection of multimedia processing, user interaction/experience, and networking systems.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6282",
    "title": "Topics in Computer Science: Practical Distributed Data",
    "description": "This graduate seminar will look at practical issues in distributed data management, including topics related to distributed databases and blockchains. The module will focus on recent and on-going research, including topics such as: cloud storage systems, distributed consistency protocols, distributed query processing, IoT data management, stream processing platforms and real-time analytics, blockchain performance, blockchain security, blockchain transactions, smart contracts, and other similar topics.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6283",
    "title": "Topics in Computer Science: Trustworthy Machine Learning",
    "description": "Machine learning is increasingly being used in critical decision-making systems, yet is not reliable in the presence of noisy, biased, and adversarial data. Can we trust machine learning models?  This module aims to answer this question, by covering the fundamental aspects of reasoning about trust in machine learning, including its robustness to adversarial data and model manipulations, the privacy risks of machine learning algorithms for sensitive data, the transparency measures for machine learning, and fairness in AI. It covers the algorithms that analyze machine learning vulnerabilities; and techniques for building reliable and trustworthy machine learning algorithms.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6284",
    "title": "Topics in Computer Science: Advanced Topics in Reinforcement Learning",
    "description": "Reinforcement learning studies how an AI agent interacts with its environment and learns according to its experiences. The advances in recent years, especially since the introduction of deep reinforcement learning, have been significant and mpactful. Examples include AlphaGo, AlphaStar, OpenAI Five, chip design, nuclear fusion plasma controller etc. In this course, we will cover advanced topics in reinforcement learning. Students will be exposed to classic and recent papers on these topics. Students are expected to have a basic understanding of deep learning and reinforcement learning. Familiarity with tensor programming libraries (such as TensorFlow, JAX, PyTorch, etc) is required.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [2, 0, 0, 4, 4],
    "attributes": {
      "lab": true,
      "mpes1": true
    },
    "semesterData": [
      {
        "semester": 1,
        "covidZones": ["B"]
      },
      {
        "semester": 2,
        "covidZones": ["B"]
      }
    ]
  },
  {
    "moduleCode": "CS6285",
    "title": "Topics in Computer Science: Bridging System and Deep Learning",
    "description": "Co-design of system and machine learning algorithms has led to faster and more scalable machine learning systems.  The module aims to expose students to recent state-of-the-art co-design techniques to make deep learning run faster, touching on both system research and AI research. The specific topics include distributed deep learning, large-batch training, second-order optimization, asynchronous algorithms, neural network compression, federated machine learning, memory-efficient optimizers, model parallelism, efficient communication library, low-precision training.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 3, 4],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6290",
    "title": "Lecture Series in Computer Science I",
    "description": "This seminar-style module exposes students to recent advances of a selected topic in computer science through readings and discussion. The selected topic varies from year-to-year. The module will be graded on a CS/CU basis.",
    "moduleCredit": "2",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [1, 0, 0, 2, 2],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6291",
    "title": "Lecture Series in Computer Science II",
    "description": "This seminar-style module exposes students to recent advances of a selected topic in computer science through readings and discussion. The selected topic varies from year-to-year. The module will be graded on a CS/CU basis.",
    "moduleCredit": "2",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [1, 0, 0, 2, 2],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6292",
    "title": "Lecture Series in Computer Science III",
    "description": "This seminar-style module exposes students to recent advances of a selected topic in computer science through readings and discussion. The selected topic varies from year-to-year. The module will be graded on a CS/CU basis.",
    "moduleCredit": "2",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [1, 0, 0, 2, 2],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  },
  {
    "moduleCode": "CS6880",
    "title": "Advanced Topics in Software Engineering",
    "description": "This module discusses contemporary concepts in software engineering, ranging from domain analysis, requirement analysis and software architectures; formal methods, analysis, design and implementation.  It aims to provide students with advanced technical and managerial knowledge in evaluating, designing, and implementing big-scale software. These include: Specialized methods for specific application domains (such as embedded systems or Web systems), in-depth study of software engineering sub-disciplines (such as testing or maintenance), as well as the issues of programming language support for software engineering. The module also provides students the opportunity to understand the methodology involved in software-engineering research.",
    "moduleCredit": "4",
    "department": "Computer Science",
    "faculty": "Computing",
    "workload": [3, 0, 0, 4, 3],
    "attributes": {
      "lab": true
    },
    "semesterData": []
  }
]
